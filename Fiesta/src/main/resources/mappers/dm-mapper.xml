<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dmMapper">

	<!-- 채팅방 resultMap -->
	<resultMap type="ChattingRoom" id="chattingRoom_rm">
      <id property="chattingNo" column="CHATTING_NO" />

      <result property="lastMessage" column="LAST_MESSAGE" />
      <result property="sendTime" column="SEND_TIME" />
      <result property="targetNo" column="TARGET_NO" />
      <result property="targetNickName" column="TARGET_NICKNAME" />
      <result property="targetProfile" column="TARGET_PROFILE" />
      <result property="notReadCount" column="NOT_READ_COUNT" />
   </resultMap>

	<!-- 채팅 메시지 resultMap -->
   <resultMap type="Chat" id="chat_rm">
      <id property="messageNo" column="CHAT_NO" />

      <result property="messageContent" column="CHAT_CONTENT" />
      <result property="readFlag" column="CHAT_READ_FL" />
      <result property="senderNo" column="C_FROM_MEMBER_NO" />
      <result property="chattingNo" column="CHATTING_NO" />
      <result property="sendTime" column="CHAT_SEND_TIME" />
   </resultMap>
   
   <resultMap type="Member" id="member_rm">
  
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "memberNo" column="MEMBER_NO"/>
     
     <!-- 나머지 일반 컬럼 -->
      <result property="memberEmail" column="MEMBER_EMAIL" />
      <result property="memberPw" column="MEMBER_PW" />
      <result property="memberName" column="MEMBER_NAME" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="enrollDate" column="ENROLL_DATE" />
      <result property="memberOpenFl" column="MEMBER_OPEN_FL" />
      <result property="secessionFl" column="SECESSION_FL" />
      <result property="authority" column="AUTHORITY" />
      
  	</resultMap>


<!-- 모달 받는 사람 회원 목록 비동기 조회 -->
<select id="selectMember" parameterType="string" resultMap="member_rm">
SELECT MEMBER_NICKNAME, MEMBER_PROFILE_IMG, MEMBER_NO
FROM "MEMBER"
WHERE MEMBER_NICKNAME LIKE '%${memberNickname}%'
AND MEMBER_NICKNAME != #{memberNickname}
</select>


<select id="checkChattingNo" resultType="_int">
      SELECT NVL(SUM(CHATTING_NO),0) CHATTING_NO FROM CHATTING_ROOM
      WHERE (MEMBER_NO_1 = #{loginMemberNo} AND MEMBER_NO_2 = #{targetNo})
      OR (MEMBER_NO_1 = #{targetNo} AND MEMBER_NO_2 = #{loginMemberNo})
</select>



<insert id="createChattingRoom" parameterType="map" useGeneratedKeys="true">

   <selectKey keyProperty="chattingNo" order="BEFORE" resultType="_int">
      SELECT SEQ_ROOM_NO.NEXTVAL FROM DUAL
   </selectKey>

   INSERT INTO CHATTING_ROOM
   VALUES(#{chattingNo}, DEFAULT, #{loginMemberNo}, #{targetNo})
</insert>

<select id="selectRoomList" resultMap="chattingRoom_rm">
   SELECT CHATTING_NO
      ,(SELECT CHAT_CONTENT FROM (
         SELECT * FROM CHAT C2
         WHERE C2.CHATTING_NO = R.CHATTING_NO
         ORDER BY CHAT_NO DESC) 
         WHERE ROWNUM = 1) LAST_MESSAGE 
      ,TO_CHAR(NVL((SELECT MAX(CHAT_SEND_DATE) SEND_TIME 
            FROM CHAT C
            WHERE R.CHATTING_NO  = C.CHATTING_NO), CHATTING_CREATE_DATE), 
            'YYYY.MM.DD') SEND_TIME
      ,NVL2((SELECT MEMBER_NO_1 FROM CHATTING_ROOM R2
         WHERE R2.CHATTING_NO = R.CHATTING_NO
         AND R2.MEMBER_NO_1  = #{memberNo}),
         R.MEMBER_NO_2 ,
         R.MEMBER_NO_1 
         ) TARGET_NO 
      ,NVL2((SELECT MEMBER_NO_1 FROM CHATTING_ROOM R2
         WHERE R2.CHATTING_NO = R.CHATTING_NO
         AND R2.MEMBER_NO_1 = #{memberNo}),
         (SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.MEMBER_NO_2),
         (SELECT MEMBER_NICKNAME FROM MEMBER WHERE MEMBER_NO = R.MEMBER_NO_1)
         ) TARGET_NICKNAME  
      ,NVL2((SELECT MEMBER_NO_1 FROM CHATTING_ROOM R2
         WHERE R2.CHATTING_NO = R.CHATTING_NO
         AND R2.MEMBER_NO_1  = #{memberNo}),
         (SELECT MEMBER_PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.MEMBER_NO_2),
         (SELECT MEMBER_PROFILE_IMG FROM MEMBER WHERE MEMBER_NO = R.MEMBER_NO_1)
         ) TARGET_PROFILE
      ,(SELECT COUNT(*) FROM CHAT C WHERE C.CHATTING_NO = R.CHATTING_NO AND CHAT_READ_FL = 'N' AND C_FROM_MEMBER_NO != #{memberNo}) NOT_READ_COUNT
      ,(SELECT MAX(CHAT_NO) CHAT_SEND_DATE FROM CHAT C WHERE R.CHATTING_NO  = C.CHATTING_NO) MAX_MESSAGE_NO
   FROM CHATTING_ROOM R
   WHERE MEMBER_NO_1 = #{memberNo}
   OR MEMBER_NO_2 = #{memberNo}
   ORDER BY MAX_MESSAGE_NO DESC NULLS LAST    
</select>

<insert id="insertMessage">
INSERT INTO "CHAT"
VALUES(SEQ_CHAT_NO.NEXTVAL, #{messageContent}, DEFAULT, DEFAULT, #{chattingNo}, #{senderNo}, #{targetNo})
</insert>

<select id="selectMessageList" resultMap="chat_rm">
SELECT CHAT_NO, CHAT_CONTENT, CHAT_READ_FL, C_FROM_MEMBER_NO, CHATTING_NO,
TO_CHAR(CHAT_SEND_DATE, 'YYYY.MM.DD HH24:MI') SEND_TIME 
FROM CHAT
WHERE CHATTING_NO = #{chattingNo}
ORDER BY CHAT_NO
</select>

<update id="updateReadFlag">
UPDATE "CHAT" SET
CHAT_READ_FL = 'Y'
WHERE CHATTING_NO = #{chattingNo}
AND C_FROM_MEMBER_NO != #{memberNo}
</update>

<select id="selectNumber" parameterType="string" resultType="_int">
SELECT MEMBER_NO
FROM "MEMBER"
WHERE MEMBER_NICKNAME = #{memberNickname}
</select>




</mapper>
