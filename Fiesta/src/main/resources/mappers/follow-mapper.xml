<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="followMapper">
	
		<!--   <resultMap type="edu.kh.project.member.model.vo.Member" id="member"></resultMap> -->
	 	<resultMap type="Member" id="member_rm">
	 
	    <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
	    <id property = "memberNo" column="MEMBER_NO"/>
	    
	    <!-- 나머지 일반 컬럼 -->
	     <result property="memberEmail" column="MEMBER_EMAIL" />
	     <result property="memberPw" column="MEMBER_PW" />
	     <result property="memberName" column="MEMBER_NAME" />
	     <result property="memberNickname" column="MEMBER_NICKNAME" />
	     <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
	     <result property="enrollDate" column="ENROLL_DATE" />
	     <result property="memberOpenFl" column="MEMBER_OPEN_FL" />
	     <result property="secessionFl" column="SECESSION_FL" />
	     <result property="authority" column="AUTHORITY" />
	 	</resultMap>
	
		
		  <!-- 게시글 객체 저장용 resultMap -->
  	<resultMap type="Board" id="board_rm">  
     	<id property = "boardNo" column="BOARD_NO"/>
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardCreateDate" column="BOARD_CREATE_DATE" />
      <result property="boardDeleteFlag" column="BOARD_DEL_FL" />
      <result property="boardPubPriFlag" column="BOARD_PUB_PRI_FL" />
      <result property="commentBlockFlag" column="COMMENT_BLOCK_FL" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="likeCount" column="LIKE_COUNT" />
      <result property="memberNo" column="MEMBER_NO" />      
      <result property="memberNickname" column="MEMBER_NICKNAME" />      
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="likeCheck" column="LIKE_CHECK" />
      <result property="bookmarkCheck" column="BOOKMARK_CHECK" />
      <result property="myNo" column="MY_NO" />
      <result property="imgPath" column="IMG_PATH" />
  	</resultMap>
	
	
	
		
	  <resultMap type="BoardImg" id="boardImg_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "imgNo" column="IMG_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="imgOrder" column="IMG_ORDER" />
      <result property="imgAddress" column="IMG_ADDRESS" />
      <result property="imgAccessibility" column="IMG_ACCESSIBILITY" />
      <result property="imgOriginalName" column="IMG_ORIGINAL_NAME" />
      <result property="imgChangeName" column="IMG_CHANGE_NAME" />
      <result property="boardNo" column="BOARD_NO" />
  	</resultMap>



		<!-- 해시태그 팔로우 여부 조회 -> 이거 따라서 팔로우/언팔로우-->
		<select id="followHashtagCheck" parameterType="hashMap" resultType="_int">
			SELECT COUNT(*)
			FROM FOLLOW
			WHERE F_FROM_MEMBER_NO = #{memberNo}
			AND FOLLOW_TYPE = 'H'
			AND F_TO_TARGET_NO = (SELECT HASHTAG_NO
									FROM HASHTAG 
									WHERE HASHTAG_CONTENT = #{keyword})			
		</select>




		<!-- 해시태그가 이미 존재하는지 확인 -->
		<select id="hashtagInsertCheck" parameterType="map" resultType="_int">
			SELECT NVL(SUM(HASHTAG_NO),0) HASHTAG_NO 
			FROM HASHTAG 
			WHERE HASHTAG_CONTENT = #{keyword}
		</select>


		<!-- HASHTAG 테이블에 삽입 -->
		<insert id="insertHashtag" parameterType="map" useGeneratedKeys="true">
	   	<selectKey keyProperty="hashtagNo" resultType="_int" order="BEFORE" >
	  		SELECT SEQ_HASHTAG_NO.NEXTVAL FROM DUAL
	  	</selectKey>
			INSERT INTO HASHTAG
			VALUES(#{hashtagNo}, #{keyword}) 		
		</insert>
		
		<!-- HASHTAG 테이블에 삽입 -->
		<insert id="insertHashtag2">
			INSERT INTO HASHTAG
			VALUES(SEQ_HASHTAG_NO.NEXTVAL, #{keyword}) 		
		</insert>


		<!-- 해시태그 팔로우 -->
  	<insert id="followHashtag">
			INSERT INTO FOLLOW
			VALUES (#{memberNo}, #{hashtagNo}, 'H', DEFAULT)
  	</insert>

  	
  	<!-- 해시태그 언팔로우 -->
  	<delete id="unfollowHashtag">
  		DELETE FROM FOLLOW 
			WHERE F_FROM_MEMBER_NO = #{memberNo}
			AND F_TO_TARGET_NO = 
			(SELECT HASHTAG_NO FROM HASHTAG WHERE HASHTAG_CONTENT = #{keyword})
  	</delete>
  	
  	
  	<!-- 계정 팔로우 여부 조회 -->
  	<select id="followAccountCheck" parameterType="map" resultType="_int">
  		SELECT COUNT(*)
			FROM FOLLOW
			WHERE F_FROM_MEMBER_NO = #{memberNo}
			AND FOLLOW_TYPE = 'M'
			AND F_TO_TARGET_NO = (SELECT MEMBER_NO 
														FROM MEMBER 
														WHERE MEMBER_NICKNAME = #{followToNickname})
  	</select>
  	
  	
  	<!-- 계정 팔로우 (닉네임 일치)-->
  	<insert id="followAccount" parameterType="map">
	  	INSERT INTO FOLLOW VALUES (#{memberNo}, (SELECT MEMBER_NO FROM "MEMBER" WHERE MEMBER_NICKNAME = #{followToNickname}), 'M', 
				(SELECT CASE
						WHEN MEMBER_OPEN_FL = 'Y' THEN 'Y'
						ELSE 'N'
					END "FOLLOW_ACCEPT_FL"
				FROM "MEMBER"
				WHERE MEMBER_NICKNAME= #{followToNickname}))
  	</insert>
  	
  	<!-- 계정 언팔로우 -->
  	<delete id="unfollowAccount">
  		DELETE FROM FOLLOW 
			WHERE F_FROM_MEMBER_NO = #{memberNo}
			AND F_TO_TARGET_NO = (SELECT MEMBER_NO FROM "MEMBER" WHERE MEMBER_NICKNAME=#{followToNickname})
  	</delete>
  	
  
</mapper>
