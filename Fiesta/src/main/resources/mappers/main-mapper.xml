<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mainMapper">

	<!--   <resultMap type="edu.kh.project.member.model.vo.Member" id="member"></resultMap> -->
  <resultMap type="Member" id="member_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "memberNo" column="MEMBER_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="memberEmail" column="MEMBER_EMAIL" />
      <result property="memberPw" column="MEMBER_PW" />
      <result property="memberName" column="MEMBER_NAME" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="enrollDate" column="ENROLL_DATE" />
      <result property="memberOpenFl" column="MEMBER_OPEN_FL" />
      <result property="secessionFl" column="SECESSION_FL" />
      <result property="authority" column="AUTHORITY" />
  </resultMap>
  
  <!-- 게시글 객체 저장용 resultMap -->
  <resultMap type="Board" id="board_rm">  
     <id property = "boardNo" column="BOARD_NO"/>
     
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardCreateDate" column="BOARD_CREATE_DATE" />
      <result property="boardDeleteFlag" column="BOARD_DEL_FL" />
      <result property="boardPubPriFlag" column="BOARD_PUB_PRI_FL" />
      <result property="commentBlockFlag" column="COMMENT_BLOCK_FL" />
      <result property="commentCount" column="COMMENT_COUNT" />
      <result property="likeCount" column="LIKE_COUNT" />
      <result property="memberNo" column="MEMBER_NO" />      
      <result property="memberNickname" column="MEMBER_NICKNAME" />      
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="likeCheck" column="LIKE_CHECK" />
      <result property="bookmarkCheck" column="BOOKMARK_CHECK" />
      <result property="myNo" column="MY_NO" />
      
      <collection property="imageList" 
      			  javaType="java.util.ArrayList" ofType="BoardImg"
      			  select="selectImageList"
      			  column = "BOARD_NO"/>
      			  
      <collection property="commentList" 
      			  javaType="java.util.ArrayList" ofType="Comment"
      			  select="selectCommentList"
      			  column = "{boardNo=BOARD_NO, myNo=MY_NO"/>
      
      
  </resultMap>
  
  <resultMap type="Comment" id="comment_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "commentNo" column="COMMENT_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="commentMemberNo" column="COMMENT_MEMBER_NO" />
      <result property="commentContent" column="COMMENT_CONTENT" />
      <result property="commentCreateDate" column="COMMENT_CREATE_DATE" />
      <result property="boardNo" column="BOARD_NO" />
      <result property="upperCommentNo" column="UPPER_COMMENT_NO" />
      <result property="memberNickname" column="MEMBER_NICKNAME" />
      <result property="memberProfileImg" column="MEMBER_PROFILE_IMG" />
      <result property="replyCount" column="REPLY_COUNT" />
      <result property="mentionNickname" column="MENTION_NICKNAME" />
      <result property="commentLikeCheck" column="COMMENT_LIKE_CHECK" />
  </resultMap>
  
  <resultMap type="Follow" id="follow_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "fromMemberNo" column="F_FROM_MEMBER_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="toTargetNo" column="F_TO_TARGET_NO" />
      <result property="followType" column="FOLLOW_TYPE" />
      <result property="followAcceptFlag" column="FOLLOW_ACCEPT_FL" />
  </resultMap>
  
 
  
  <resultMap type="BoardImg" id="boardImg_rm">
        <!-- DB에서 PK에 해당하는 필드, 컬럼을 작성하는 태그 -->
     <id property = "imgNo" column="IMG_NO"/>
     <!-- 나머지 일반 컬럼 -->
      <result property="imgOrder" column="IMG_ORDER" />
      <result property="imgAddress" column="IMG_ADDRESS" />
      <result property="imgAccessibility" column="IMG_ACCESSIBILITY" />
      <result property="imgOriginalName" column="IMG_ORIGINAL_NAME" />
      <result property="imgChangeName" column="IMG_CHANGE_NAME" />
      <result property="boardNo" column="BOARD_NO" />
  </resultMap>
  
  
  
  
  <!-- 팔로잉 멤버 조회 -->
  <select id="selectFollowing" parameterType="_int" resultMap="follow_rm">
  	SELECT F_FROM_MEMBER_NO, F_TO_TARGET_NO 
	FROM FOLLOW f 
	WHERE F_FROM_MEMBER_NO = #{memberNo}
  </select>
  
  <!-- 팔로잉 멤버 게시글 수 조회 -->
  <select id="getListCount" parameterType="_int" resultType="_int">
  	SELECT COUNT(*)
	FROM BOARD b
	WHERE BOARD_DEL_FL = 'N'
	AND b.MEMBER_NO IN (SELECT F_TO_TARGET_NO FROM FOLLOW WHERE F_FROM_MEMBER_NO = #{memberNo})
	OR REGEXP_LIKE(b.BOARD_CONTENT, (SELECT LISTAGG(HASHTAG_CONTENT, '|') 
		         WITHIN GROUP(ORDER BY HASHTAG_CONTENT) AS HASHTAG_CONTENT
		           FROM ( SELECT '#' || HASHTAG_CONTENT  AS HASHTAG_CONTENT 
		          FROM FOLLOW 
		          JOIN HASHTAG ON (F_TO_TARGET_NO = HASHTAG_NO)
		          WHERE F_FROM_MEMBER_NO = #{memberNo}
		          AND FOLLOW_TYPE = 'H'))) 
	ORDER BY b.BOARD_NO DESC
  </select>
  
  <!-- 팔로잉 멤버 게시글 조회 -->
  <select id="selectBoardList" parameterType="_int" resultMap="board_rm">
		<![CDATA[ 
		SELECT b.BOARD_NO , BOARD_CONTENT , BOARD_PUB_PRI_FL , COMMENT_BLOCK_FL , 
		   b.MEMBER_NO, M.MEMBER_NICKNAME, MEMBER_PROFILE_IMG, #{memberNo} MY_NO,
		   CASE 
		      WHEN SYSDATE - BOARD_CREATE_DATE  < 1/24/60
		      THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24 * 60 * 60 ) || '초 전'
		      WHEN SYSDATE - BOARD_CREATE_DATE  < 1/24
		      THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24 * 60) || '분 전'
		      WHEN SYSDATE - BOARD_CREATE_DATE  < 1
		      THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24) || '시간 전'
		      ELSE TO_CHAR(BOARD_CREATE_DATE , 'MM"월" DD"일", YYYY')
		   END BOARD_CREATE_DATE, ]]>
		   (SELECT COUNT(BOARD_NO)
		   FROM BOARD_LIKE L
		   WHERE L.BOARD_NO = b.BOARD_NO) LIKE_COUNT,
		   (SELECT COUNT(*) 
		   FROM "COMMENT" C
		   WHERE C.BOARD_NO = b.BOARD_NO) COMMENT_COUNT,
		   (SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = b.BOARD_NO
		   AND UPPER_COMMENT_NO IS NOT NULL) AS REPLY_COUNT,
		   (SELECT COUNT(*) FROM BOARD_LIKE bl
				WHERE MEMBER_NO = #{memberNo} AND bl.BOARD_NO = b.BOARD_NO) LIKE_CHECK,
				(SELECT COUNT(*) FROM BOOKMARK bm
				WHERE MEMBER_NO = #{memberNo} AND bm.BOARD_NO = b.BOARD_NO) BOOKMARK_CHECK
		   FROM BOARD b
		   JOIN "MEMBER" M ON(b.MEMBER_NO = M.MEMBER_NO)
		   WHERE BOARD_DEL_FL = 'N'
		   AND b.MEMBER_NO IN (SELECT F_TO_TARGET_NO FROM FOLLOW WHERE F_FROM_MEMBER_NO = #{memberNo})
		   OR REGEXP_LIKE(b.BOARD_CONTENT, (SELECT LISTAGG(HASHTAG_CONTENT, '|') 
		         WITHIN GROUP(ORDER BY HASHTAG_CONTENT) AS HASHTAG_CONTENT
		           FROM ( SELECT '#' || HASHTAG_CONTENT  AS HASHTAG_CONTENT 
		          FROM FOLLOW 
		          JOIN HASHTAG ON (F_TO_TARGET_NO = HASHTAG_NO)
		          WHERE F_FROM_MEMBER_NO = #{memberNo}
		          AND FOLLOW_TYPE = 'H'))) AND BOARD_DEL_FL = 'N'
		   ORDER BY b.BOARD_NO DESC
  </select>
  
  
  <!-- 게시글 이미지 조회 -->
  <select id="selectImageList" parameterType="_int" resultMap="boardImg_rm">
  	SELECT *
	FROM BOARD_IMG
	WHERE BOARD_NO = #{boardNo}
	ORDER BY IMG_ORDER
  </select>
  
  
  <!-- 게시글 댓글 리스트 조회 -->
  <select id="selectCommentList" resultMap="comment_rm">
  	SELECT LEVEL, C.* FROM
	(SELECT COMMENT_NO , COMMENT_MEMBER_NO , COMMENT_CONTENT,
	<![CDATA[
	CASE 
		WHEN SYSDATE - COMMENT_CREATE_DATE   < 1/24/60
		THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - COMMENT_CREATE_DATE   < 1/24
		THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24 * 60) || '분 전'
		WHEN SYSDATE - COMMENT_CREATE_DATE   < 1
		THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24) || '시간 전'
		ELSE TO_CHAR(COMMENT_CREATE_DATE  , 'MM"월" DD"일", YYYY') 
	END COMMENT_CREATE_DATE ,]]>
	 UPPER_COMMENT_NO , BOARD_NO, MEMBER_NICKNAME, MEMBER_PROFILE_IMG,
		(SELECT COUNT(*) 
		FROM "COMMENT" c2 
		WHERE c2.UPPER_COMMENT_NO = c.COMMENT_NO  
		AND c.BOARD_NO = c2.BOARD_NO) REPLY_COUNT,
		(SELECT MEMBER_NICKNAME
		FROM "COMMENT" c2 
		JOIN "MEMBER" m2 ON (COMMENT_MEMBER_NO = MEMBER_NO)
		WHERE c.UPPER_COMMENT_NO = c2.COMMENT_NO  
		AND c.BOARD_NO = c2.BOARD_NO) MENTION_NICKNAME,
		(SELECT COUNT(*) FROM COMMENT_LIKE cl 
		WHERE cl.LIKE_COMMENT_NO = c.COMMENT_NO 
		AND MEMBER_NO = #{myNo}) COMMENT_LIKE_CHECK
	FROM "COMMENT" c
	JOIN "MEMBER" m ON (COMMENT_MEMBER_NO = MEMBER_NO)
	WHERE BOARD_NO = #{boardNo}) C
	START WITH UPPER_COMMENT_NO = 0
	CONNECT BY PRIOR COMMENT_NO = UPPER_COMMENT_NO
	ORDER SIBLINGS BY COMMENT_NO

  </select>
  
  <!-- 게시글 좋아요 증가 -->
  <insert id="boardLikeUp">
  	INSERT INTO BOARD_LIKE 
	VALUES(#{boardNo}, #{memberNo})
  </insert>
  
  <!-- 게시글 좋아요 감소 -->
  <delete id="boardLikeDown">
  	DELETE FROM BOARD_LIKE
  	WHERE BOARD_NO = #{boardNo}
  	AND MEMBER_NO = #{memberNo}
  </delete>
  
  <!-- 게시글 좋아요 수 조회 -->
  <select id="likeCount" resultType="_int">
  	SELECT COUNT(*)
  	FROM BOARD_LIKE
  	WHERE BOARD_NO = #{boardNo}
  </select>
  
  <!-- 게시글 북마크 추가 -->
  <insert id="boardBookmarkOn">
  	INSERT INTO BOOKMARK
  	VALUES(#{boardNo}, #{memberNo})
  </insert>
  
  <!-- 게시글 북마크 취소 -->
  <delete id="boardBookmarkOff">
  	DELETE FROM BOOKMARK
  	WHERE BOARD_NO = #{boardNo}
  	AND MEMBER_NO = #{memberNo}
  </delete>
  

  <!-- 답글 목록 조회 -->
  <select id="selectReplyList" parameterType="map" resultMap="comment_rm">
  	SELECT COMMENT_NO , COMMENT_MEMBER_NO , COMMENT_CONTENT,
  	<![CDATA[
		CASE 
			WHEN SYSDATE - COMMENT_CREATE_DATE   < 1/24/60
			THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24 * 60 * 60 ) || '초 전'
			WHEN SYSDATE - COMMENT_CREATE_DATE   < 1/24
			THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24 * 60) || '분 전'
			WHEN SYSDATE - COMMENT_CREATE_DATE   < 1
			THEN FLOOR( (SYSDATE - COMMENT_CREATE_DATE  ) * 24) || '시간 전'
			ELSE TO_CHAR(COMMENT_CREATE_DATE  , 'MM"월" DD"일", YYYY') 
		END COMMENT_CREATE_DATE, ]]>
		 UPPER_COMMENT_NO , BOARD_NO, MEMBER_NICKNAME, MEMBER_PROFILE_IMG,
		 (SELECT COUNT(*) FROM COMMENT_LIKE cl 
		WHERE cl.LIKE_COMMENT_NO = c.COMMENT_NO 
		AND MEMBER_NO = #{myNo}) COMMENT_LIKE_CHECK
	FROM "COMMENT" c 
	JOIN "MEMBER" m ON (COMMENT_MEMBER_NO = MEMBER_NO)
	WHERE UPPER_COMMENT_NO = #{commentNo}
  </select>
	  
  <select id="selectBoard" resultMap="board_rm">
  	<![CDATA[ 
	SELECT b.BOARD_NO , BOARD_CONTENT , BOARD_PUB_PRI_FL , COMMENT_BLOCK_FL , 
	b.MEMBER_NO, M.MEMBER_NICKNAME, MEMBER_PROFILE_IMG, #{memberNo} MY_NO,
	CASE 
		WHEN SYSDATE - BOARD_CREATE_DATE  < 1/24/60
		THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24 * 60 * 60 ) || '초 전'
		WHEN SYSDATE - BOARD_CREATE_DATE  < 1/24
		THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24 * 60) || '분 전'
		WHEN SYSDATE - BOARD_CREATE_DATE  < 1
		THEN FLOOR( (SYSDATE - BOARD_CREATE_DATE ) * 24) || '시간 전'
		ELSE TO_CHAR(BOARD_CREATE_DATE , 'MM"월" DD"일", YYYY')
	END BOARD_CREATE_DATE, ]]>
	(SELECT COUNT(BOARD_NO)
	FROM BOARD_LIKE L
	WHERE L.BOARD_NO = b.BOARD_NO) LIKE_COUNT,
	(SELECT COUNT(*) 
	FROM "COMMENT" C
	WHERE C.BOARD_NO = b.BOARD_NO) COMMENT_COUNT,
	(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = b.BOARD_NO
	AND UPPER_COMMENT_NO IS NOT NULL) AS REPLY_COUNT,
	(SELECT COUNT(*) FROM BOARD_LIKE bl
	WHERE MEMBER_NO = #{memberNo} AND bl.BOARD_NO = b.BOARD_NO) LIKE_CHECK,
	(SELECT COUNT(*) FROM BOOKMARK bm
	WHERE MEMBER_NO = #{memberNo} AND bm.BOARD_NO = b.BOARD_NO) BOOKMARK_CHECK
	FROM BOARD b
	JOIN "MEMBER" M ON(b.MEMBER_NO = M.MEMBER_NO)
	WHERE BOARD_NO = #{boardNo}
  </select>
  

  
  <!-- 게시글 삭제 -->
  <update id="deleteBoard">
  	UPDATE BOARD SET
  	BOARD_DEL_FL = 'Y'
  	WHERE BOARD_NO = #{boardNo}
  </update>

</mapper>
